# 示例环境变量配置文件

# API Key相关配置（v1端口客户端接入）
# 支持多种配置方式：
# 1. 多个API Key用逗号分隔
LANGCHAIN_API_KEYS="your_api_key_1,your_api_key_2"

# 2. 单个默认API Key
LANGCHAIN_API_KEY="your_default_api_key"

# 3. 多个编号API Key，最多支持10个
LANGCHAIN_API_KEY_1="your_api_key_1"
LANGCHAIN_API_KEY_2="your_api_key_2"

# 是否启用API认证，默认启用，设为false关闭
ENABLE_API_AUTH="true"

# 管理员Key，拥有特殊权限
LANGCHAIN_ADMIN_KEY="your_admin_api_key"

# OpenAI (Full features)
OPENAI_API_KEY="your-openai-api-key"
OPENAI_BASE_URL="https://url/v1"  # Optional

# 自定义OpenAI Base URL配置示例
CUSTOM_LANGUAGE_COMPONENT_CONFIG={"openAI":{"baseUrl":"https://custom-openai.example.com/v1","apiKey":"your_openai_api_key"}}
LANGFLOW_ROUTER_MODEL_NAME="gpt-4.1-nano"
# ===========================

# Google Gemini (Recommended: low cost, fast)
GOOGLE_API_KEY="your-google-api-key"
# GOOGLE_BASE_URL="https://generativelanguage.googleapis.com"  # Optional



# DeepSeek (Chinese friendly, strong reasoning)
DEEPSEEK_API_KEY="your-deepseek-api-key"

# Aliyun Tongyi Qianwen (Chinese optimized)
DASHSCOPE_API_KEY="your-dashscope-api-key"

# Custom OpenAI Compatible Providers
NEKO_API_KEY="your-neko-api-key"
NEKO_BASE_URL="your-neko-base-url"

# Claude (Top complex task handling)
CLAUDE_API_KEY="your-claude-api-key"
CLAUDE_BASE_URL="https://api.anthropic.com"

# Other OpenAI Compatible Providers
O3_API_KEY="your-o3-api-key"
O3_BASE_URL="your-o3-base-url"

# OpenRouter (Multi-model aggregation)
OPENROUTER_API_KEY="your-openrouter-api-key"
OPENROUTER_BASE_URL="https://openrouter.ai/api/v1"

# Tencent Hunyuan
TENCENT_HUNYUAN_SECRET_ID="your-tencent-secret-id"
TENCENT_HUNYUAN_SECRET_KEY="your-tencent-secret-key"

# Cloudflare Workers AI
CLOUDFLARE_API_TOKEN="your-cloudflare-api-token"
CLOUDFLARE_ACCOUNT_ID="your-cloudflare-account-id"

# ===========================
# Unified Intelligent Routing System Configuration
# ===========================
ENABLE_UNIFIED_ROUTING="true"
ENABLE_INTELLIGENT_ROUTING="true"
ENABLE_MODEL_SWITCHING="true"
ENABLE_PERFORMANCE_MONITORING="true"

ROUTING_CONFIDENCE_THRESHOLD="0.7"
ROUTING_FALLBACK_MODEL="gpt-4o-all"
ROUTING_CACHE_TTL="300"

UNIFIED_ROUTER_SEMANTIC_ANALYSIS="true"
UNIFIED_ROUTER_CAPABILITY_MATCHING="true"
UNIFIED_ROUTER_EXPLICIT_MODEL_SUPPORT="true"
UNIFIED_ROUTER_FALLBACK_CHAIN="true"

COMPLEXITY_HIGH_MODELS="claude-sonnet-4-all,gpt-4o-all,deepseek-reasoner,hunyuan-t1-latest"
COMPLEXITY_MEDIUM_MODELS="gpt-4o-all,gemini-flash,qwen-turbo,hunyuan-turbos-latest,claude-sonnet-4-all"
COMPLEXITY_LOW_MODELS="gemini-flash,qwen-turbo,hunyuan-turbos-latest,gpt-4o-all"

MODEL_SELECTION_CAPABILITY_WEIGHT="0.4"
MODEL_SELECTION_COST_WEIGHT="0.3"
MODEL_SELECTION_PERFORMANCE_WEIGHT="0.3"

# ===========================
# Advanced Features Configuration
# ===========================
TAVILY_API_KEY="your-tavily-api-key"
SERPAPI_API_KEY="your-serpapi-api-key"
BING_SEARCH_API_KEY="your-bing-search-api-key"

# ===========================
# Memory and Persistence Configuration
# ===========================
ENABLE_MEMORY="true"
MEMORY_PROVIDER="buffer"
MEMORY_MAX_TOKEN_LIMIT="4000"
MEMORY_RETURN_MESSAGES="true"

# LangGraph State Persistence
DATABASE_URL="postgresql://user:password@host:port/database?schema=public"
REDIS_URL="redis://localhost:6379/0"

# ===========================
# Monitoring and Logging Configuration
# ===========================
LANGCHAIN_TRACING_V2="true"
LANGCHAIN_API_KEY="your-langsmith-api-key"
LANGCHAIN_PROJECT="langchain-intelligent-routing"
LANGSMITH_ENDPOINT="https://api.smith.langchain.com"

LOG_LEVEL="info"
LOG_FORMAT="json"
ENABLE_REQUEST_LOGGING="true"

ENABLE_PERFORMANCE_METRICS="true"
METRICS_ENDPOINT="/api/metrics"

# ===========================
# Performance and Limits Configuration
# ===========================
MAX_CONCURRENT_REQUESTS="10"
REQUEST_TIMEOUT="30000"
RATE_LIMIT_REQUESTS_PER_MINUTE="60"

# ===========================
# Cache Configuration
# ===========================
ENABLE_RESPONSE_CACHE="false"
CACHE_TTL="3600"
CACHE_PROVIDER="memory"
REDIS_CACHE_URL="redis://localhost:6379/1"

# ===========================
# Security Configuration
# ===========================
ENABLE_CORS="true"
ALLOWED_ORIGINS="http://localhost:3000,https://your-domain.com"

API_KEY_HEADER="X-API-Key"
API_SECRET_KEY="your-secret-key"

# ===========================
# Feature Toggles
# ===========================
ENABLE_VISION_PROCESSING="true"
ENABLE_WEB_SEARCH="true"
ENABLE_DOCUMENT_RETRIEVAL="true"
ENABLE_STRUCTURED_OUTPUT="true"
ENABLE_AGENT_TOOLS="true"
ENABLE_COMPLEX_REASONING="true"

# ===========================
# Language Optimization
# ===========================
ENABLE_CHINESE_OPTIMIZATION="true"
ENABLE_MULTILINGUAL_SUPPORT="true"

# ===========================
# Advanced Features
# ===========================
ENABLE_MODEL_FALLBACK="true"
ENABLE_AUTOMATIC_RETRIES="true"
ENABLE_CONTEXT_AWARENESS="true"

# ===========================
# Development and Testing Configuration
# ===========================
NODE_ENV="development"
DEBUG_MODE="false"
MOCK_API_RESPONSES="false"
TEST_API_KEY="test-key-for-development"

# ===========================
# Development Tools
# ===========================
ENABLE_BUNDLE_ANALYZER="false"
ENABLE_PERFORMANCE_PROFILING="false"

# ===========================
# Deployment Configuration
# ===========================
LANGCHAIN_CALLBACKS_BACKGROUND="false"
VERCEL_ENV="production"

# ===========================
# Health Check
# ===========================
ENABLE_HEALTH_CHECK="true"
HEALTH_CHECK_ENDPOINT="/api/health"

# ===========================
# Additional Environment Variables
# ===========================
BASIC_MODEL_NAME="gpt-4o-mini"
RAG_MODEL_NAME="gpt-4o"
LANGFUSE_API_URL="your-langfuse-api-url"
LANGFUSE_API_KEY="your-langfuse-api-key"
VERCEL_REGION="your-vercel-region"
VERCEL_FUNCTION_TIMEOUT="30"
# 路由模型名称配置环境变量
LANGFLOW_ROUTER_MODEL_NAME="gpt-4.1-nano"
NEXT_PUBLIC_DEMO="false"

# 自定义 OpenAI Base URL 配置（示例）
CUSTOM_LANGUAGE_COMPONENT_CONFIG={"openAI":{"baseUrl":"https://custom-openai.example.com/v1","apiKey":"your_openai_api_key"}}

# CHAT_INPUT_CONFIG 示例
CHAT_INPUT_CONFIG={
  "session_id": "session_example",
  "user_id": "anonymous",
  "model_configs": {
    "basic": { "model": "gpt-4.1", "temperature": 0.1 },
    "enhanced": { "model": "gpt-4o-mini", "temperature": 0.3 },
    "rag": { "model": "gpt-4o-mini", "temperature": 0.2 },
    "agent": { "model": "gpt-4o", "temperature": 0.5 }
  },
  "routing_thresholds": {
    "confidence_threshold": 0.8,
    "requires_llm_threshold": 0.7
  },
  "export_settings": {
    "langchainjs_compatible": true,
    "flatten_metadata": true,
    "include_timestamps": true
  }
}

# LANGFLOW_AGENT_PROMPT_CONFIG 示例
LANGFLOW_AGENT_PROMPT_CONFIG={
  "deployment": {
    "env": "standard",
    "edgeCompatible": false,
    "region": "local",
    "functionTimeout": 30
  },
  "langchainjs_compatibility": {
    "export_format": true,
    "flatten_metadata": true,
    "runnable_interface": false
  }
}

# LANGFLOW_AGENT_CONFIG 示例
LANGFLOW_AGENT_CONFIG={
  "deployment": {
    "env": "standard",
    "edgeCompatible": false,
    "region": "local",
    "functionTimeout": 30
  },
  "langchainCompatibility": {
    "exportFormat": true,
    "flattenMetadata": true,
    "runnableInterface": false
  }
}

# LANGFLOW_CONDITIONAL_ROUTER_CONFIG 示例
LANGFLOW_CONDITIONAL_ROUTER_CONFIG={
  "deployment": {
    "env": "standard",
    "edgeCompatible": false,
    "region": "local",
    "functionTimeout": 30
  }
}
